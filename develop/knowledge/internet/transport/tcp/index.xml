<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TCP on yossy4411のノート</title><link>https://yossy4411.okayugroup.net/develop/knowledge/internet/transport/tcp/</link><description>Recent content in TCP on yossy4411のノート</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright>yossy4411 (おかゆ)</copyright><lastBuildDate>Sun, 20 Apr 2025 23:54:54 +0900</lastBuildDate><atom:link href="https://yossy4411.okayugroup.net/develop/knowledge/internet/transport/tcp/index.xml" rel="self" type="application/rss+xml"/><item><title>TCP</title><link>https://yossy4411.okayugroup.net/develop/knowledge/internet/transport/tcp/about/</link><pubDate>Sun, 20 Apr 2025 23:54:54 +0900</pubDate><guid>https://yossy4411.okayugroup.net/develop/knowledge/internet/transport/tcp/about/</guid><description>&lt;p>&lt;strong>Transmission Control Protocol&lt;/strong>（トランスミッション コントロール プロトコル、&lt;strong>TCP&lt;/strong>）は&lt;a class="link" href="https://yossy4411.okayugroup.net/develop/knowledge/internet/protocol/about/" >IP&lt;/a>ネットワーク上のアプリ間・コネクション型・高信頼性・ストリーム指向の通信プロトコルである。&lt;/p>
&lt;h2 id="概要">概要
&lt;/h2>&lt;p>TCPは通信プロトコルである。&lt;br>
TCPではポート、ソケット、コネクションの概念が導入され、IPネットワークのホスト上にあるアプリケーション同士がコネクションを通じて通信する。&lt;br>
確立されたコネクションは、TCPが定める制御機構によって到着が保証され、破壊（エラー）が検出され、流量や輻輳が制御されており、これを通信路としてバイトストリームが伝達される。&lt;/p>
&lt;p>TCPを用いることで、インターネットにおける到達保証付きアプリケーション間メッセージ通信が可能になる。このため、ファイル転送や電子メール、&lt;span class="dead-link">
World Wide Web
&lt;span style="font-size: 1rem">（リンク切れ）&lt;/span>
&lt;/span>、リモートデバイス管理などの様々な&lt;a class="link" href="https://yossy4411.okayugroup.net/develop/knowledge/internet/application/about/" >インターネットアプリケーション&lt;/a>で使用される。&lt;/p>
&lt;h3 id="特徴">特徴
&lt;/h3>&lt;h3 id="コネクションの確立3-way-ハンドシェイク">コネクションの確立（3-way ハンドシェイク）
&lt;/h3>&lt;p>通信前にクライアントとサーバー間で接続を確立する。これにより、信頼できる通信チャネルが形成される。&lt;/p>
&lt;p>接続を確立してからデータを転送するが、確立された接続はそのまま残すことができる(Keep-Alive) ので、たくさんのデータを送信するためにも使われる。&lt;/p>
&lt;h3 id="信頼性の保証">信頼性の保証
&lt;/h3>&lt;p>各パケットに&lt;strong>シーケンス番号&lt;/strong>を持たせて順序を管理し、&lt;strong>ACK（確認応答）&lt;/strong> で受信の確認を行う。届いていないパケットは自動的に再送される（再送処理）。&lt;/p>
&lt;h3 id="順序制御">順序制御
&lt;/h3>&lt;p>パケットがバラバラに届いた場合でも、受信側で正しい順序に並べ替える。&lt;/p>
&lt;h3 id="フロー制御">フロー制御
&lt;/h3>&lt;p>相手の処理能力に応じて送信量を調整し、バッファオーバーフローを防ぐ。&lt;/p>
&lt;p>バッファオーバーフローというのは、受け取り側でデータがバッファに入り切らずに必要なデータが捨てられることで、これはパケットロスにつながる。&lt;/p>
&lt;h3 id="輻輳制御">輻輳制御
&lt;/h3>&lt;p>ネットワークの混雑状況を検知し、パケットの送信速度を調整することで、通信品質を保つ。&lt;/p>
&lt;h3 id="利用例">利用例
&lt;/h3>&lt;p>TCPは、以下のようなアプリケーションに適している：&lt;/p>
&lt;ul>
&lt;li>Web通信（HTTP, HTTPS）&lt;/li>
&lt;li>メール（SMTP, POP3, IMAP）&lt;/li>
&lt;li>ファイル転送（FTP）&lt;/li>
&lt;li>リモート接続（SSH, Telnet）&lt;/li>
&lt;/ul>
&lt;p>このようなケースは、パケットロスは許されないが通信が遅くてもやりきれるものである。&lt;br>
逆にパケットロスは許されるが速度が必要なケースには&lt;a class="link" href="https://yossy4411.okayugroup.net/develop/knowledge/internet/transport/udp/about/" >UDP&lt;/a>が用いられることが多い。&lt;/p>
&lt;h3 id="udpとの比較">UDPとの比較
&lt;/h3>&lt;p>&lt;a class="link" href="https://yossy4411.okayugroup.net/develop/knowledge/internet/transport/udp/about/" >TCPとの比較&lt;/a>のとおりである。&lt;/p>
&lt;h3 id="補足">補足
&lt;/h3>&lt;p>TCPは信頼性重視のプロトコルであるため、&lt;strong>リアルタイム性が重視されるアプリ（ボイスチャットやゲームなど）では適さないこともある&lt;/strong>。そのような用途には&lt;a class="link" href="https://yossy4411.okayugroup.net/develop/knowledge/internet/transport/udp/about/" >UDP&lt;/a>や、UDPベースで信頼性も考慮した&lt;a class="link" href="https://yossy4411.okayugroup.net/develop/knowledge/internet/transport/quic/about/" >QUIC&lt;/a>などが用いられる。&lt;/p></description></item></channel></rss>
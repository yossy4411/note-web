<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>QUIC on yossy4411のノート</title><link>https://yossy4411.okayugroup.net/develop/knowledge/internet/transport/quic/</link><description>Recent content in QUIC on yossy4411のノート</description><generator>Hugo -- gohugo.io</generator><language>ja</language><copyright>yossy4411 (おかゆ)</copyright><lastBuildDate>Mon, 28 Apr 2025 21:39:46 +0900</lastBuildDate><atom:link href="https://yossy4411.okayugroup.net/develop/knowledge/internet/transport/quic/index.xml" rel="self" type="application/rss+xml"/><item><title>QUIC</title><link>https://yossy4411.okayugroup.net/develop/knowledge/internet/transport/quic/about/</link><pubDate>Mon, 28 Apr 2025 21:39:46 +0900</pubDate><guid>https://yossy4411.okayugroup.net/develop/knowledge/internet/transport/quic/about/</guid><description>&lt;p>&lt;strong>QUIC&lt;/strong> (クイック) は、次世代型の&lt;a class="link" href="https://yossy4411.okayugroup.net/develop/knowledge/internet/transport/about/" >トランスポート層&lt;/a>の通信プロトコルである。&lt;/p>
&lt;h2 id="概要">概要
&lt;/h2>&lt;p>QUICは、&lt;a class="link" href="https://yossy4411.okayugroup.net/develop/knowledge/internet/transport/udp/about/" >UDP&lt;/a>を基礎にGoogleのJIM Roskindによって設計された、TLSを用いたセキュリティやUDPに由来する高速性などの面で優れている通信プロトコルである。&lt;/p>
&lt;p>QUICは、エンドポイント間の多重化接続の集合体に対応しており、レイテンシ削減や接続の一時的な切断にも柔軟に対応できる。これらの理由から、&lt;a class="link" href="https://yossy4411.okayugroup.net/develop/knowledge/internet/application/http/3/" >HTTP/3&lt;/a>にも採用されている。&lt;/p>
&lt;h2 id="特徴">特徴
&lt;/h2>&lt;h3 id="セキュリティが高い">セキュリティが高い
&lt;/h3>&lt;p>QUICの接続は、すべてTLS1.3で暗号化されており、この規則を破ることはどんな場合においても&lt;strong>不可能&lt;/strong>である。また、接続時にはTLSハンドシェイクを行い、高効率で信頼性の高い通信ができるよう設計されている。&lt;/p>
&lt;h3 id="udpベース">UDPベース
&lt;/h3>&lt;p>TCPのようなコネクション型であるが、&lt;a class="link" href="https://yossy4411.okayugroup.net/develop/knowledge/internet/transport/udp/about/" >UDP&lt;/a>がベースとなっている。&lt;/p>
&lt;p>UDPの上に再送処理や順序制御などで、信頼性を築き上げている。&lt;/p>
&lt;h3 id="コネクションの再利用と再開が可能">コネクションの再利用と再開が可能
&lt;/h3>&lt;p>モバイル回線やWi-Fiの切り替えなどでIPアドレスが変わっても、QUICはコネクションを保持できる。これは、コネクションをIPアドレスで判別するのではなくコネクションIDを割り当てて判別しているからである。&lt;/p>
&lt;h3 id="ストリームの多重化">ストリームの多重化
&lt;/h3>&lt;p>QUICでは、一つの接続に対して複数のストリームを持つことができる。これによりHTTP/2のヘッドオブラインブロッキング問題（HoL）を解決できる。&lt;/p>
&lt;h3 id="利用状況">利用状況
&lt;/h3>&lt;p>Google, YouTube, Gmail, Facebook, Cloudflare, LINEなどの多数のサービスで、HTTP/3を含めたQUICプロトコルが採用されている。&lt;/p>
&lt;p>2020年には、IETF (Internet Engineering Task Force)により正式な標準仕様として承認された。&lt;/p>
&lt;p>なお、&lt;a class="link" href="https://yossy4411.okayugroup.net/develop/knowledge/internet/application/http/about/" >HTTP/3&lt;/a>はQUICの上で動作する。このHTTP/3は現状、多数のサーバーで採用されている。&lt;/p>
&lt;h2 id="tcpと比較">TCPと比較
&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>項目&lt;/th>
&lt;th>TCP + TLS&lt;/th>
&lt;th>QUIC&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>ベース&lt;/td>
&lt;td>TCP&lt;/td>
&lt;td>UDP&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>暗号化&lt;/td>
&lt;td>別（TLS）&lt;/td>
&lt;td>組み込み（TLS 1.3）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>接続確立&lt;/td>
&lt;td>複数ラウンド&lt;/td>
&lt;td>1-RTT or 0-RTT&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ストリーム&lt;/td>
&lt;td>全体が止まる（HoLあり）&lt;/td>
&lt;td>独立（HoLなし）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>接続遮断への対応&lt;/td>
&lt;td>再接続が必要&lt;/td>
&lt;td>コネクション維持可能&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="セキュリティと拡張性">セキュリティと拡張性
&lt;/h3>&lt;p>暗号化された状態で通信されるため、&lt;strong>中継装置（ミドルボックス）による最適化が難しい&lt;/strong>。だがその分、&lt;strong>プロトコルの進化が高速にできる&lt;/strong>というメリットもある。&lt;/p></description></item></channel></rss>